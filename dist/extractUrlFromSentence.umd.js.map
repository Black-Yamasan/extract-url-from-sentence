{"version":3,"file":"extractUrlFromSentence.umd.js","sources":["../src/extractUrlFromSentence.ts"],"sourcesContent":["export const extractUrlFromSentence = (sentence: string): string[] =>\n{\n  const urlAndEmailRule: RegExp = /(?!.*<)([a-z0-9@/:-]{2,})([.]{1,})(.*)+[\\w/]{2,}/gi\n  const emailRule: RegExp = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/gi\n  const urlAndEmailPattern: RegExp = new RegExp(urlAndEmailRule)\n  const hasUrlText: boolean = urlAndEmailPattern.test(sentence)\n\n  if (!hasUrlText) {\n    return []\n  }\n\n  let duplecatedSentence: string = sentence.slice()\n\n  const urlAndEmailPatternText: RegExpMatchArray = duplecatedSentence.match(urlAndEmailPattern)\n\n  // remove multi byte string\n  const extractSingleByteText: string[] = urlAndEmailPatternText.map((text) => {\n    const duplicatedText: string = text.slice()\n    return duplicatedText.split(/[^\\x01-\\x7E]/gm)\n  })\n    .flat()\n    .filter((singleByteText) => singleByteText.length > 0)\n\n  // remove white space and email\n  const extractUrlText: string[] = extractSingleByteText.map((text) => {\n    const duplicatedText: string = text.slice()\n    return duplicatedText.split(/\\s/gi)\n  })\n    .flat()\n    .filter((text) => {\n      const pattern: RegExp = new RegExp(urlAndEmailRule)\n      return pattern.test(text)\n    })\n    .filter((text) => {\n      const emailPattern: RegExp = new RegExp(emailRule)\n      return !emailPattern.test(text)\n    })\n  \n  return extractUrlText \n}\n"],"names":[],"mappings":";;;;;;QAAa,sBAAsB,GAAG,CAAC,QAAgB;MAErD,MAAM,eAAe,GAAW,oDAAoD,CAAA;MACpF,MAAM,SAAS,GAAW,2CAA2C,CAAA;MACrE,MAAM,kBAAkB,GAAW,IAAI,MAAM,CAAC,eAAe,CAAC,CAAA;MAC9D,MAAM,UAAU,GAAY,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;MAE7D,IAAI,CAAC,UAAU,EAAE;UACf,OAAO,EAAE,CAAA;OACV;MAED,IAAI,kBAAkB,GAAW,QAAQ,CAAC,KAAK,EAAE,CAAA;MAEjD,MAAM,sBAAsB,GAAqB,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAA;;MAG7F,MAAM,qBAAqB,GAAa,sBAAsB,CAAC,GAAG,CAAC,CAAC,IAAI;UACtE,MAAM,cAAc,GAAW,IAAI,CAAC,KAAK,EAAE,CAAA;UAC3C,OAAO,cAAc,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAA;OAC9C,CAAC;WACC,IAAI,EAAE;WACN,MAAM,CAAC,CAAC,cAAc,KAAK,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;;MAGxD,MAAM,cAAc,GAAa,qBAAqB,CAAC,GAAG,CAAC,CAAC,IAAI;UAC9D,MAAM,cAAc,GAAW,IAAI,CAAC,KAAK,EAAE,CAAA;UAC3C,OAAO,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;OACpC,CAAC;WACC,IAAI,EAAE;WACN,MAAM,CAAC,CAAC,IAAI;UACX,MAAM,OAAO,GAAW,IAAI,MAAM,CAAC,eAAe,CAAC,CAAA;UACnD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;OAC1B,CAAC;WACD,MAAM,CAAC,CAAC,IAAI;UACX,MAAM,YAAY,GAAW,IAAI,MAAM,CAAC,SAAS,CAAC,CAAA;UAClD,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;OAChC,CAAC,CAAA;MAEJ,OAAO,cAAc,CAAA;EACvB;;;;;;;;;;"}